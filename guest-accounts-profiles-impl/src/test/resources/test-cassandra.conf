keyspace-name = "guest_profiles"
cassandra-username = ""
cassandra-username = ${?CASSANDRA_USERNAME}
cassandra-password = ""
cassandra-password = ${?CASSANDRA_PASSWORD}

cassandra.replication-strategy = "SimpleStrategy"
cassandra.replication-strategy = ${?CASSANDRA_REPLICATION_STRATEGY}
cassandra.replication-factor = 1
cassandra.replication-factor = ${?CASSANDRA_REPLICATION_FACTOR}

lagom.persistence {
  ask-timeout = 10s
  read-side.cassandra {
    # The implementation of akka.persistence.cassandra.SessionProvider
    # is used for creating the Cassandra Session. By default the
    # the ServiceLocatorSessionProvider is building the Cluster from configuration
    # and contact points are looked up with ServiceLocator using the configured
    # cluster-id as the service name.
    # Use akka.persistence.cassandra.ConfigSessionProvider to read the contact-points
    # from configuration instead of using the ServiceLocator.
    # It is possible to replace the implementation of the SessionProvider
    # to reuse another session or override the Cluster builder with other
    # settings.
    # The implementation class may optionally have a constructor with an ActorSystem
    # and Config parameter. The config parameter is the enclosing config section.
    session-provider = akka.persistence.cassandra.ConfigSessionProvider

    cluster-id = "cas_native_guest_profiles"
    cluster-id = ${?CASSANDRA_SERVICE_NAME}

    # Comma-separated list of contact points in the Cassandra cluster
    cas_contact_point_one = "localhost"
    cas_contact_point_one = ${?CAS_CONTACT_POINT_ONE}
    contact-points = [${lagom.persistence.read-side.cassandra.cas_contact_point_one}, ${?CAS_CONTACT_POINT_TWO}, ${?CAS_CONTACT_POINT_THREE}]

    # Port of contact points in the Cassandra cluster
    port = 9042
    port = ${?CAS_CONTACT_POINTS_PORT}

    keyspace = ${keyspace-name}

    keyspace-autocreate = true
    tables-autocreate = true

    replication-strategy = ${cassandra.replication-strategy}
    replication-factor = ${cassandra.replication-factor}

    authentication.username = ${cassandra-username}
    authentication.password = ${cassandra-password}
  }
}

cassandra-journal {
  session-provider = akka.persistence.cassandra.ConfigSessionProvider
  # Comma-separated list of contact points in the Cassandra cluster
  cas_contact_point_one = "localhost"
  cas_contact_point_one = ${?CAS_CONTACT_POINT_ONE}
  contact-points = [${lagom.persistence.read-side.cassandra.cas_contact_point_one}, ${?CAS_CONTACT_POINT_TWO}, ${?CAS_CONTACT_POINT_THREE}]

  # Port of contact points in the Cassandra cluster
  port = 9042
  port = ${?CAS_CONTACT_POINTS_PORT}

  keyspace = ${keyspace-name}
  keyspace-autocreate = true
  tables-autocreate = true
  replication-strategy = ${cassandra.replication-strategy}
  replication-factor = ${cassandra.replication-factor}
  authentication {
    username = ${cassandra-username}
    password = ${cassandra-password}
  }
  cluster-id = "cas_native_guest_profiles"
  cluster-id = ${?CASSANDRA_SERVICE_NAME}
}

cassandra-snapshot-store {
  session-provider = akka.persistence.cassandra.ConfigSessionProvider
  # Comma-separated list of contact points in the Cassandra cluster

  cas_contact_point_one = "localhost"
  cas_contact_point_one = ${?CAS_CONTACT_POINT_ONE}
  contact-points = [${lagom.persistence.read-side.cassandra.cas_contact_point_one}, ${?CAS_CONTACT_POINT_TWO}, ${?CAS_CONTACT_POINT_THREE}]

  # Port of contact points in the Cassandra cluster
  port = 9042
  port = ${?CAS_CONTACT_POINTS_PORT}

  keyspace = ${keyspace-name}
  keyspace-autocreate = true
  tables-autocreate = true
  replication-strategy = ${cassandra.replication-strategy}
  replication-factor = ${cassandra.replication-factor}
  authentication {
    username = ${cassandra-username}
    password = ${cassandra-password}
  }
  cluster-id = "cas_native_guest_profiles"
  cluster-id = ${?CASSANDRA_SERVICE_NAME}
}
